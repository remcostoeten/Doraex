version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: doraex-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: doraex
      POSTGRES_USER: doraex_user
      POSTGRES_PASSWORD: doraex_password_123
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U doraex_user -d doraex"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    image: node:18-alpine
    container_name: doraex-app-dev
    working_dir: /app
    restart: unless-stopped
    ports:
      - "3420:3000"
    environment:
      # Next.js Configuration
      NODE_ENV: development
      NEXT_PUBLIC_APP_URL: http://localhost:3420
      
      # NextAuth Configuration
      NEXTAUTH_URL: http://localhost:3420
      NEXTAUTH_SECRET: development-secret-key-change-in-production-please
      AUTH_SECRET: development-secret-key-change-in-production-please
      
      # Database Configuration
      DATABASE_URL: postgresql://doraex_user:doraex_password_123@postgres:5432/doraex
      
      # Development/Debug
      DEBUG: true
      LOG_LEVEL: info
      
      # GitHub OAuth (optional - set these if you want GitHub auth)
      GITHUB_CLIENT_ID: ""
      GITHUB_CLIENT_SECRET: ""
      
      # Google OAuth (optional - set these if you want Google auth)
      GOOGLE_CLIENT_ID: ""
      GOOGLE_CLIENT_SECRET: ""
      
      # Email Configuration (optional)
      EMAIL_SERVER_HOST: smtp.gmail.com
      EMAIL_SERVER_PORT: 587
      EMAIL_SERVER_USER: ""
      EMAIL_SERVER_PASSWORD: ""
      EMAIL_FROM: ""
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    command: sh -c "npm install -g pnpm && pnpm install && pnpm run dev --port 3000"

volumes:
  postgres_data_dev:
    driver: local
